Instructions
************
Complete the 'read_data' and 'update_array2d' functions in game_of_life.c. 
The objective of this lab to implement Conway's Game of Life whose rules can be
found at https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life.

Example:
Input: tests/testX
3 3
0 0 0
0 1 0 
0 0 0
Output: Prints the array to the terminal or to the file depending on
the provided arguments.

read_data:
This function reads the data from a text file as shown above. You will need to
store the first two numbers into the rows, cols arguments respectively and store
the remaining data into the array arr. The provided code create an array of 
appropriate size so you only need to fill it in.

Because the sizes of the array are provided dynamically, you can't simply use 
'sscanf' to complete this function. Although, there are several ways to 
complete this function, I recommend to make use of 'fgets' and 'strtol'.

I have also provided you with a 'fprint_array2d' which you can use to print out
the contents of arr to help you debug. You are allowed to modify the main.c to
help with debugging. If you are going to print out the array, I recommen d that
you call 'fprint_array2d' before/after the 'fclose(in_file)' [ln 44].

update_array2d:
This function updates the array according to the rules of the Game of Life 
provided in the website above. Again, there are several ways of completing this
function. I have created an enum that you may use to when writing this function.

Also, please note that the board wraps around horizontally and vertically so the
array never ends so to speak, ie arr[-1] should give me the value of 
arr[length - 1]. I provided you with a 'mod' function to implement this 
functionality.

Execution:
You can execute the program by typing the following commands:
./bin/game_of_life testX <time>
where testX is either test1, test2, or test3 (NOT THE FULL PATH!) and <time> is
an optional argument to run the program for some time. If you run the command 
without <time>, then you will see the animation of the test on the terminal; 
otherwise, it will print some output to the 'output' directory (USED FOR 
TESTING).

Compiling:
Please ignore the warnings about the 'mwaddwstr' and 'usleep' functions.

HINT:
You can completed 'update_array2d' in place without creating any extra arrays.

Assumptions:
--The size of the array will be >= 1 x 1
